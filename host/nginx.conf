# Set this regex to include other places your client might be located.
# You'll also need to set the server_name and SSL paths to your API server's domain, along with getting Certbot certificates for those domains.
map $http_origin $allow_origin {
    "~*^https?://((app\.)?ferris\.chat|ferris\.pages\.dev" $http_origin;
    default "";
}


server {
    server_name api.example.chat;
    include common/errors.conf;

    location / {
        # return 503 'FerrisChat is temporarily down.';
        add_header 'Access-Control-Allow-Origin' $allow_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Email,Password' always;
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
        add_header 'Access-Control-Max-Age' '86400' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        proxy_pass http://unix:/etc/ferrischat/webserver.sock;
    }

    location /v0/ws/connect {
        proxy_pass http://unix:/etc/ferrischat/websocket.sock;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    listen [::]:443 ssl ipv6only=on http2; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.example.chat/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.example.chat/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    server_name ws.api.example.chat;
    include common/errors.conf;

    location / {
        proxy_pass http://unix:/etc/ferrischat/websocket.sock;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen [::]:443 ssl http2; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ws.api.example.chat/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ws.api.example.chat/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = ws.api.example.chat) {
        return 301 https://$host$request_uri;
    }
    # managed by Certbot


    server_name ws.api.example.chat;
    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot


}


server {
    if ($host = api.example.chat) {
        return 301 https://$host$request_uri;
    }
    # managed by Certbot


    server_name api.example.chat;
    listen 80;
    listen [::]:80;
    return 404; # managed by Certbot


}
